@model ERP.Core.Models.GeneralManagement.Organisation

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="card shadow mb-4">

                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Add Company</h6>
                    </div>

                    @using (Html.BeginForm("Create", "Organisation", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return JQueryAjaxPostCompany(this);", data_restUrl = Url.Action("Create", "Organisation"), @class = "form-horizontal", id = "Organisation-form" }))//data-resetUrl
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model=>model.Id)

                        <div class="card-body card-block">
                            <div class="form-row">

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(model => model.Name, new { @class = "form-control-label" })

                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(model => model.Address, new { @class = "form-control-label" })

                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(model => model.ContactNo, new { @class = "form-control-label" })

                                    @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-3">
                                    @Html.LabelFor(model => model.VatPan, new { @class = "form-control-label" })

                                    @Html.TextBoxFor(model => model.VatPan, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VatPan, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-success btn-lg" type="submit" id="btn-submit">Save</button>
                            <button class="btn btn-danger btn-lg" type="button" id="btn-clear">Clear</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#btn-clear').on('click', function () {
        GlobalFunctions.ClearForm($(this))
    });

     $(document).ready(function () {

        var id = @Model.Id;
        if (id < 1) {
            $("#btn-submit").html("Create");
            //$('ul.nav.nav-tabs a:eq(1)').html('Add');
        }
        else {
            //$('ul.nav.nav-tabs a:eq(1)').html('Update');
            $("#btn-submit").html("Update");
        }
     });



///Ajax post method
function JQueryAjaxPostCompany(form, event) {

    //if ($('form').valid()) {
    if ($(form).valid()) {
        $.ajax({

            type: "POST",
            url: form.action,
            data: new FormData(form),// form.serialize(),//; { formData: new FormData(form) },// { ids: "idlist"},// new FormData(form),
            dataType: "json",
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                GlobalFunctions.GetMessage(data.Message, null, data.ErrorCode, 0, null, null);
                if (data.Message != "UpdatedSuccessfully" && data.Message == "AddedSuccessfully")
                    bindView('@Url.Action("Create", "Organisation")', 'addedit')

                return;
            },

            error: function (xhr, ajaxOptions, thrownError) {
                GlobalFunctions.GetMessage(thrownError, null, "1", 0, null, null);
                return;
            }
        });
    }
    else {
        return false;
    }
    return false;
}

</script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>