
@model ERP.Core.Models.GeneralManagement.FiscalYear
@using ERP.Common.Helper

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">

                @using (Html.BeginForm("Update", "FiscalYear", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return JQueryAjaxPostFY(this);", data_restUrl = Url.Action("Update", "FiscalYear"), @class = "form-horizontal", id = "FiscalYear-form" }))//data-resetUrl
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)

                    <div class="card-body card-block">
                        <div class="form-row">

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.ShortName, "Short Name", new { @class = "form-control-label required" })

                                @Html.TextBoxFor(model => model.ShortName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.YearCode, "Year Code", new { @class = "form-control-label required" })

                                @Html.TextBoxFor(model => model.YearCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YearCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.StartDate, "Start Date", new { @class = "form-control-label required" })

                                @Html.TextBoxFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.EndDate, "End Date", new { @class = "form-control-label required" })

                                @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-success btn-lg" type="submit" id="btn-submit">Update</button>
                        <button class="btn btn-danger btn-lg" type="button" id="btn-cancel">Cancel</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
       
        var id = @Model.Id;
        if (id < 1) {
            $("#btn-submit").html("Create");
            //$('ul.nav.nav-tabs a:eq(1)').html('Add');
        }
        else {
            //$('ul.nav.nav-tabs a:eq(1)').html('Update');
            $("#btn-submit").html("Update");
        }
    });


///Ajax post method
function JQueryAjaxPostFY(form, event) {

    //if ($('form').valid()) {
    if ($(form).valid()) {
        $.ajax({

            type: "POST",
            url: form.action,
            data: new FormData(form),// form.serialize(),//; { formData: new FormData(form) },// { ids: "idlist"},// new FormData(form),
            dataType: "json",
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                GlobalFunctions.GetMessage(data.Message, null, data.ErrorCode, 0, null, null);
                if (data.Message != "UpdatedSuccessfully" && data.Message == "AddedSuccessfully")
                    bindView('@Url.Action("Update", "FiscalYear")', 'addedit')
                  
                return;
            },

            error: function (xhr, ajaxOptions, thrownError) {
                GlobalFunctions.GetMessage(thrownError, null, "1", 0, null, null);
                return;
            }
        });
    }
    else {
        return false;
    }
    return false;
}
</script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

